gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #Alex is 105
#Pc2 vs 3
fviz_pca_ind(pr.out2, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC3 vs 4
fviz_pca_ind(pr.out2, axes = c(3,4),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC4 vs 5
fviz_pca_ind(pr.out2, axes = c(4,5),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fadata <- fa(data2_big5, nfactors = 5)$scores #currently doing it on data with Alex as datapoint
fadata <- as_data_frame(fadata) #converting numerical vectors to data frame
summary(fadata)
distance <- dist(fadata, method = "euclidean")
plot(hclust(distance, method = 'complete')) #shows two clusters
fadataclust <- hclust(distance, method = 'complete')
fadataclusters <- cutree(fadataclust, k = 2)
averages <- fadata %>%
mutate(cluster = fadataclusters) %>%
group_by(cluster) %>%
summarise_all(mean)
averages
elbow_method <- fviz_nbclust(fadata,
FUNcluster = kmeans,
method = "silhouette")
elbow_method
data_mbti
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
data1 <- read.csv("personality_tests.csv")
data1
no_rows <- data1[-c(1,2, 3, 4),]
no_rows
## removing row 1 as it repeated the column names, row 2 as it had the description for each column, row 3 and 4 also removed as they were previews of the questionnaire and empty
no_cols <- no_rows %>%  select(starts_with("Q") )
## removed all columns except progress and the columns starting with Q to indicate the questions
no_cols
id <- no_cols %>%  mutate(id = 1:133) ## adding an id column (*PERSONALLY - I DONT THINK THIS IS NEEDED*)
data <- sapply(id, as.numeric)
## converting all columns from character to numeric / integer
data
## Dividing the dataset into 2:
# BIG 5:
data1_big5 <- data[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id"  )]
data1_big5
data_big5 <- na.omit(data1_big5) ## removing NAs
data_big5
# MBTI
data1_mbti <- data[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data1_mbti
data_mbti <- na.omit(data1_mbti) ## removing NAs
data_mbti
corrplot(cor(data_big5), method="number")
fa.parallel(data_big5, n.obs = 116, fa = "fa", fm = "minres")
EFA_model <- fa(data_big5, nfactors = 5)
EFA_model
fa.diagram(EFA_model)
pr.out <- prcomp(data_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
summary(pr.out)
biplot(pr.out)
fviz_eig(pr.out)
#PC1 vs 2
fviz_pca_ind(pr.out,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #individual clustering
fviz_pca_var(pr.out,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PCA 2 vs 3
fviz_pca_ind(pr.out, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(2,3),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
#PCA 3 vs 4
fviz_pca_ind(pr.out, axes = c(3,4),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(3,4),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
#PCA 4 vs 5
fviz_pca_ind(pr.out, axes = c(4,5),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(4,5),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
alex <- read.csv("alexahpenev_personality.csv")
alex <- alex %>% mutate(id = 134)
alex_big5 <- alex[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id")]
alex_mbti <- alex[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data2_big5 <- rbind(data_big5, alex_big5)
data2_mbti <- rbind(data_mbti, alex_mbti)
pr.out2 <- prcomp(data2_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
#PC 1 vs 2
fviz_pca_ind(pr.out2,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #Alex is 105
#Pc2 vs 3
fviz_pca_ind(pr.out2, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC3 vs 4
fviz_pca_ind(pr.out2, axes = c(3,4),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC4 vs 5
fviz_pca_ind(pr.out2, axes = c(4,5),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fadata <- fa(data2_big5, nfactors = 5)$scores #currently doing it on data with Alex as datapoint
fadata <- as_data_frame(fadata) #converting numerical vectors to data frame
summary(fadata)
distance <- dist(fadata, method = "euclidean")
plot(hclust(distance, method = 'complete')) #shows two clusters
fadataclust <- hclust(distance, method = 'complete')
fadataclusters <- cutree(fadataclust, k = 2)
averages <- fadata %>%
mutate(cluster = fadataclusters) %>%
group_by(cluster) %>%
summarise_all(mean)
averages
elbow_method <- fviz_nbclust(fadata,
FUNcluster = kmeans,
method = "silhouette")
elbow_method
```{r}
fa.parallel(data_big5, n.obs = 116, fa = "fa", fm = "minres")
EFA_model <- fa(data_big5, nfactors = 5)
EFA_model
fa.diagram(EFA_model)
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
data1 <- read.csv("personality_tests (1).csv")
data1 <- read.csv("personality_tests.csv")
data1 <- read.csv("personality_test.csv")
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
data1 <- read.csv("personality_tests (1).csv")
data1 <- read.csv("personality_tests.csv")
data1
no_rows <- data1[-c(1,2, 3, 4),]
no_rows
## removing row 1 as it repeated the column names, row 2 as it had the description for each column, row 3 and 4 also removed as they were previews of the questionnaire and empty
no_cols <- no_rows %>%  select(starts_with("Q") )
## removed all columns except progress and the columns starting with Q to indicate the questions
no_cols
id <- no_cols %>%  mutate(id = 1:133) ## adding an id column (*PERSONALLY - I DONT THINK THIS IS NEEDED*)
data <- sapply(id, as.numeric)
data <- as_data_frame(data)
## converting all columns from character to numeric / integer
data
## Dividing the dataset into 2:
# BIG 5:
data1_big5 <- data[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id"  )]
data1_big5
data_big5 <- na.omit(data1_big5) ## removing NAs
data_big5
# MBTI
data1_mbti <- data[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data1_mbti
data_mbti <- na.omit(data1_mbti) ## removing NAs
data_mbti
data1 <- read.csv("personality_tests.csv")
data1
no_rows <- data1[-c(1,2, 3, 4),]
no_rows
## removing row 1 as it repeated the column names, row 2 as it had the description for each column, row 3 and 4 also removed as they were previews of the questionnaire and empty
no_cols <- no_rows %>%  select(starts_with("Q") )
## removed all columns except progress and the columns starting with Q to indicate the questions
no_cols
id <- no_cols %>%  mutate(id = 1:133) ## adding an id column (*PERSONALLY - I DONT THINK THIS IS NEEDED*)
data <- sapply(id, as.numeric)
data <- as_data_frame(data)
## converting all columns from character to numeric / integer
data
## Dividing the dataset into 2:
# BIG 5:
data1_big5 <- data[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id"  )]
data1_big5
data_big5 <- na.omit(data1_big5) ## removing NAs
data_big5
# MBTI
data1_mbti <- data[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data1_mbti
data_mbti <- na.omit(data1_mbti) ## removing NAs
data_mbti
corrplot(cor(data_big5), method="number")
fa.parallel(data_big5, n.obs = 116, fa = "fa", fm = "minres")
EFA_model <- fa(data_big5, nfactors = 5)
EFA_model
fa.diagram(EFA_model)
pr.out <- prcomp(data_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
summary(pr.out)
biplot(pr.out)
fviz_eig(pr.out)
#PC1 vs 2
fviz_pca_ind(pr.out,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #individual clustering
fviz_pca_var(pr.out,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PCA 2 vs 3
fviz_pca_ind(pr.out, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(2,3),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
#PCA 3 vs 4
fviz_pca_ind(pr.out, axes = c(3,4),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(3,4),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
#PCA 4 vs 5
fviz_pca_ind(pr.out, axes = c(4,5),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(4,5),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
alex <- read.csv("alexahpenev_personality.csv")
alex <- alex %>% mutate(id = 134)
alex_big5 <- alex[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id")]
alex_mbti <- alex[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data2_big5 <- rbind(data_big5, alex_big5)
data2_mbti <- rbind(data_mbti, alex_mbti)
pr.out2 <- prcomp(data2_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
#PC 1 vs 2
fviz_pca_ind(pr.out2,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #Alex is 105
#Pc2 vs 3
fviz_pca_ind(pr.out2, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC3 vs 4
fviz_pca_ind(pr.out2, axes = c(3,4),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PC4 vs 5
fviz_pca_ind(pr.out2, axes = c(4,5),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fadata <- fa(data2_big5, nfactors = 5)$scores #currently doing it on data with Alex as datapoint
fadata <- as_data_frame(fadata) #converting numerical vectors to data frame
summary(fadata)
distance <- dist(fadata, method = "euclidean")
plot(hclust(distance, method = 'complete')) #shows two clusters
fadataclust <- hclust(distance, method = 'complete')
fadataclusters <- cutree(fadataclust, k = 5)
averages <- fadata %>%
mutate(cluster = fadataclusters) %>%
group_by(cluster) %>%
summarise_all(mean)
averages
elbow_method <- fviz_nbclust(fadata,
FUNcluster = kmeans,
method = "silhouette")
elbow_method
#shows 5 is optimal k
kmeansclustering <- kmeans(fadata, centers = 5)
fviz_cluster(kmeansclustering, fadata[, -5], ellipse.type = "norm", palette = "Set2", ggtheme = theme_minimal())
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
data1 <- read.csv("personality_tests.csv")
data1
no_rows <- data1[-c(1,2, 3, 4),]
no_rows
## removing row 1 as it repeated the column names, row 2 as it had the description for each column, row 3 and 4 also removed as they were previews of the questionnaire and empty
no_cols <- no_rows %>%  select(starts_with("Q") )
## removed all columns except progress and the columns starting with Q to indicate the questions
no_cols
id <- no_cols %>%  mutate(id = 1:133) ## adding an id column (*PERSONALLY - I DONT THINK THIS IS NEEDED*)
data <- sapply(id, as.numeric)
data <- as_data_frame(data)
## converting all columns from character to numeric / integer
data
## Dividing the dataset into 2:
# BIG 5:
data1_big5 <- data[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id"  )]
data1_big5
data_big5 <- na.omit(data1_big5) ## removing NAs
data_big5
# MBTI
data1_mbti <- data[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data1_mbti
data_mbti <- na.omit(data1_mbti) ## removing NAs
data_mbti
averages
3) Clustering Big 5 data
```{r}
fadata <- fa(data2_big5, nfactors = 5)$scores #currently doing it on data with Alex as datapoint
fadata <- as_data_frame(fadata) #converting numerical vectors to data frame
summary(fadata)
distance <- dist(fadata, method = "euclidean")
plot(hclust(distance, method = 'complete')) #shows two clusters
fadataclust <- hclust(distance, method = 'complete')
fadataclusters <- cutree(fadataclust, k = 5)
averages <- fadata %>%
mutate(cluster = fadataclusters) %>%
group_by(cluster) %>%
summarise_all(mean)
fadata <- fa(data2_big5, nfactors = 5)$scores #currently doing it on data with Alex as datapoint
fviz_eig(pr.out)
ummary(pr.out)
pr.out <- prcomp(data_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
summary(pr.out)
summary(pr.out)
loadings_pca <- pr.out$rotation
view (loadings_pca)
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
library(FactoMineR)
data1 <- read.csv("personality_tests.csv")
library(tidyverse)
library(cluster)
library(factoextra)
library(psych)
library(corrplot)
library(GPArotation)
library(FactoMineR)
data1 <- read.csv("personality_tests.csv")
data1
no_rows <- data1[-c(1,2, 3, 4),]
no_rows
## removing row 1 as it repeated the column names, row 2 as it had the description for each column, row 3 and 4 also removed as they were previews of the questionnaire and empty
no_cols <- no_rows %>%  select(starts_with("Q") )
## removed all columns except progress and the columns starting with Q to indicate the questions
no_cols
id <- no_cols %>%  mutate(id = 1:133) ## adding an id column (*PERSONALLY - I DONT THINK THIS IS NEEDED*)
data <- sapply(id, as.numeric)
data <- as_data_frame(data)
## converting all columns from character to numeric / integer
data
## Dividing the dataset into 2:
# BIG 5:
data1_big5 <- data[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id"  )]
data1_big5
data_big5 <- na.omit(data1_big5) ## removing NAs
data_big5
# MBTI
data1_mbti <- data[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data1_mbti
data_mbti <- na.omit(data1_mbti) ## removing NAs
data_mbti
pr.out <- prcomp(data_mbti,
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
summary(pr.out)
biplot(pr.out)
fviz_eig(pr.out)
#PC1 vs 2
fviz_pca_ind(pr.out,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #individual clustering
fviz_pca_var(pr.out,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#PCA 2 vs 3
fviz_pca_ind(pr.out, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(2,3),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
pr.out2 <- prcomp(data2_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
pr.out2 <- prcomp(data2_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
alex <- read.csv("alexahpenev_personality.csv")
alex <- alex %>% mutate(id = 134)
alex_big5 <- alex[, c("Q1", "Q4", "Q6", "Q7", "Q8", "Q9", "Q10", "Q11", "Q12", "Q13", "Q14", "Q15", "Q16", "Q17", "Q18", "Q19", "Q20", "Q21", "Q22", "Q23", "Q24", "Q25", "Q26", "Q27", "Q28", "Q29", "Q30", "Q31", "Q32", "Q33", "Q34", "Q35", "Q36", "Q37", "Q38", "Q39", "Q40", "Q41", "Q42", "Q43", "Q45", "Q46", "Q47", "Q48", "Q49", "Q50", "Q51", "Q52", "Q53", "Q54", "id")]
alex_mbti <- alex[, c("Q55", "Q56", "Q57", "Q58", "Q59", "Q60", "Q61", "Q62", "Q63", "Q64", "Q65", "Q66", "Q67", "Q68", "Q69", "Q70", "Q71", "Q72", "Q73", "Q74", "Q75", "Q76", "Q77", "Q78", "Q79", "Q80", "Q81", "Q82", "Q83", "Q84", "Q85", "Q86", "Q87", "Q88", "Q89", "Q90", "Q91", "Q92", "Q93", "Q94", "Q95", "Q96", "Q97", "Q98", "Q99", "Q100", "Q101", "Q102", "Q103", "Q104", "Q105", "Q106", "Q107", "Q108", "Q109", "Q110", "Q111", "Q112", "Q113", "Q114", "Q115", "Q116", "Q117", "Q118", "Q119", "Q120", "Q121", "Q122", "Q123", "Q124", "Q125", "id")]
data2_big5 <- rbind(data_big5, alex_big5)
data2_mbti <- rbind(data_mbti, alex_mbti)
pr.out2 <- prcomp(data2_mbti, #what data - here data is already clean
scale = TRUE, #scaling = standardisation
center = TRUE) #subtracting means
#PC 1 vs 2
fviz_pca_ind(pr.out2,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
) #Alex is 105
#Pc2 vs 3
fviz_pca_ind(pr.out2, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#Regular PR Rotation to determine loadings
pr.out2$rotation
pr.out2$rotation
#Regular PR Rotation to determine loadings
view(pr.out2$rotation)
fviz_pca_ind(pr.out, axes = c(2,3),
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_biplot(pr.out, repel = TRUE,
axes = c(2,3),
col.var = "#2E9FDF", # Variables color
col.ind = "#696969" # Individuals color
)
setwd("~/Documents/GitHub/isha")
fakefile.cpp
